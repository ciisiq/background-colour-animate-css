* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  font-family: 'lato', sans-serif;
}

.container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100vh;
  width: 100%;
  background: linear-gradient(45deg, #f43f70, #f47e9d, #f5b5c6, #8f1637);
  background-size: 300% 300%;
  animation: color 12s ease-in-out infinite;
  gap: 20px;
}

@keyframes color {
  0% {
    background-position: 0 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0 50%;
  }
}

.white-box {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-size: 25px;
  color: #f43f70;
  background-color: rgb(255, 255, 255);
  width: 65%;
  height: 300px;
  border-radius: 15px;
  box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;
  gap: 20px;
}

.btn {
  font-size: 2rem;
  font-weight: 700;
  padding: 0.5em 1em;
  color: #f43f70;
  background-color: #fec3d3;
  border: 7px solid #f43f70;
  border-radius: 5px;
  cursor: pointer;

  /* Make smooth transition */
  /* transition-property: transform;
  transition-duration: 0.3s;
  transition-timing-function: ease;
  transition-delay: 0s; */

  /* Short code for above*/

  /* Only for transform */
  /* transition: transform 0.3s ease 0s; */
  /* transition: transform 0.3s ease 0s, background-color 3s, color 0.3s; */

  /* For evertyhing */
  transition: all 0.3s;
}

.btn:hover {
  transform: translateY(-10px);
  background-color: #f43f70;
  color: white;
}

/* Like a function to say what the animation should do */
@keyframes slideInLeft {
  /* start of the animation 0% */
  from {
    transform: translateX(-300px);
  }

  /* end of the animation 100% */
  to {
    transform: translateX(0);
  }
}

.slideInLeft {
  animation: slideInLeft 1s ease-in;
}

.heading {
  /* call your animation */
  /* animation-name: slideInLeft; */
  /* set the time for it finish one lap 0 to 100% */
  /* animation-duration: 1s;
  animation-timing-function: ease-in;
  animation-delay: 1s; */
  /* how many times you want the animation run */
  /* animation-iteration-count: 1; */
  /* if animation will run normally or reverse */
  /* animation-direction: normal; */
  /* apply the styles before to start */
  /* animation-fill-mode: both; */

  /* Push the animation to push in certain place in the page */
  /* transform: translateX(150px); */

  /* All above in sort code */
  /* animation: slideInLeft 1s ease-in 1s 1 normal both; */
  animation: slideInLeft 1s ease-in;
}

/* ---------------- CARDS -------------- */

.wrapper {
  display: flex;
  width: 70%;
  justify-content: space-around;
}

.card {
  width: 280px;
  height: 360px;
  padding: 2rem 1rem;
  background: #fff;
  position: relative;
  display: flex;
  align-items: flex-end;
  box-shadow: 0px 7px 10px rgb(0, 0, 0, 0.5);
  transition: 0.5 ease-in-out;
  border-radius: 10px;
}

.card:hover {
  transform: translateY(20px);
}

.card:before {
  border-radius: 10px;
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to bottom,
    rgba(255, 163, 188, 0.786),
    rgb(201, 65, 117)
  );
  z-index: 2;
  transition: 0.5s all;
  opacity: 0;
}

.card:hover:before {
  opacity: 1;
}

.card img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  position: absolute;
  top: 0;
  left: 0;
  border-radius: 10px;
}

.card .info {
  position: relative;
  z-index: 3;
  color: #fff;
  opacity: 0;
  transform: translateY(30px);
  transition: 0.5s all;
}

.card:hover .info {
  opacity: 1;
  transform: translateY(0);
}

.card .info h1 {
  margin: 0;
}

.card .info p {
  letter-spacing: 1px;
  font-size: 15px;
  margin-top: 8px;
  margin-bottom: 20px;
}

.card .info .btn-2 {
  text-decoration: none;
  padding: 0.5rem 1rem;
  background-color: #fff;
  color: rgb(73, 73, 73);
  font-size: 14px;
  font-weight: bold;
  cursor: pointer;
  transition: 0.4s ease-in-out;
  border-radius: 5px;
}

.card .info .btn-2:hover {
  box-shadow: 0px 7px 10px rgb(0, 0, 0, 0.5);
}
